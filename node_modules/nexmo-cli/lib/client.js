'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _nexmo = require('nexmo');

var _nexmo2 = _interopRequireDefault(_nexmo);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Client = function () {
  function Client(config, emitter) {
    _classCallCheck(this, Client);

    this.emitter = emitter;
    this.config = config;
  }

  _createClass(Client, [{
    key: 'instance',
    value: function instance() {
      var nexmo = initialize(this.config, this.emitter);
      return nexmo;
    }
  }, {
    key: 'definition',
    value: function definition() {
      return _nexmo2.default;
    }
  }, {
    key: 'instanceWith',
    value: function instanceWith(key, secret) {
      return new _nexmo2.default({ apiKey: key, apiSecret: secret });
    }
  }]);

  return Client;
}();

exports.default = Client;

// private methods

var initialize = function initialize(config, emitter) {
  var nexmo = null;
  var packageDetails = require(__dirname + '/../package.json');

  try {
    var credentials = config.read().credentials;
    nexmo = new _nexmo2.default({
      apiKey: credentials.api_key,
      apiSecret: credentials.api_secret
    }, {
      debug: emitter.debugging,
      appendToUserAgent: 'nexmo-cli/' + packageDetails.version.replace('v', '')
    });
  } catch (e) {
    if (e instanceof TypeError) {
      emitter.error('Could not initialize Nexmo library. Please run \'nexmo setup\' to setup the CLI correctly. (' + e.message + ')');
    } else {
      emitter.error('Could not read credentials. Please run \'nexmo setup\' to setup the CLI. (' + e.message + ')');
    }
  }
  return nexmo;
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQuanMiXSwibmFtZXMiOlsiQ2xpZW50IiwiY29uZmlnIiwiZW1pdHRlciIsIm5leG1vIiwiaW5pdGlhbGl6ZSIsImtleSIsInNlY3JldCIsImFwaUtleSIsImFwaVNlY3JldCIsInBhY2thZ2VEZXRhaWxzIiwicmVxdWlyZSIsIl9fZGlybmFtZSIsImNyZWRlbnRpYWxzIiwicmVhZCIsImFwaV9rZXkiLCJhcGlfc2VjcmV0IiwiZGVidWciLCJkZWJ1Z2dpbmciLCJhcHBlbmRUb1VzZXJBZ2VudCIsInZlcnNpb24iLCJyZXBsYWNlIiwiZSIsIlR5cGVFcnJvciIsImVycm9yIiwibWVzc2FnZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTs7Ozs7Ozs7SUFFTUEsTTtBQUNKLGtCQUFZQyxNQUFaLEVBQW9CQyxPQUFwQixFQUE2QjtBQUFBOztBQUMzQixTQUFLQSxPQUFMLEdBQWVBLE9BQWY7QUFDQSxTQUFLRCxNQUFMLEdBQWNBLE1BQWQ7QUFDRDs7OzsrQkFFVTtBQUNULFVBQUlFLFFBQVFDLFdBQVcsS0FBS0gsTUFBaEIsRUFBd0IsS0FBS0MsT0FBN0IsQ0FBWjtBQUNBLGFBQU9DLEtBQVA7QUFDRDs7O2lDQUVZO0FBQ1g7QUFDRDs7O2lDQUVZRSxHLEVBQUtDLE0sRUFBUTtBQUN4QixhQUFPLG9CQUFVLEVBQUNDLFFBQVFGLEdBQVQsRUFBY0csV0FBV0YsTUFBekIsRUFBVixDQUFQO0FBQ0Q7Ozs7OztrQkFHWU4sTTs7QUFFZjs7QUFFQSxJQUFJSSxhQUFhLFNBQWJBLFVBQWEsQ0FBU0gsTUFBVCxFQUFpQkMsT0FBakIsRUFBMEI7QUFDekMsTUFBSUMsUUFBUSxJQUFaO0FBQ0EsTUFBSU0saUJBQWlCQyxRQUFXQyxTQUFYLHNCQUFyQjs7QUFFQSxNQUFJO0FBQ0YsUUFBSUMsY0FBY1gsT0FBT1ksSUFBUCxHQUFjRCxXQUFoQztBQUNBVCxZQUFRLG9CQUNOO0FBQ0VJLGNBQVFLLFlBQVlFLE9BRHRCO0FBRUVOLGlCQUFXSSxZQUFZRztBQUZ6QixLQURNLEVBS047QUFDRUMsYUFBT2QsUUFBUWUsU0FEakI7QUFFRUMsd0NBQWdDVCxlQUFlVSxPQUFmLENBQXVCQyxPQUF2QixDQUErQixHQUEvQixFQUFvQyxFQUFwQztBQUZsQyxLQUxNLENBQVI7QUFVRCxHQVpELENBWUUsT0FBTUMsQ0FBTixFQUFTO0FBQ1QsUUFBSUEsYUFBYUMsU0FBakIsRUFBNEI7QUFDMUJwQixjQUFRcUIsS0FBUixrR0FBMkdGLEVBQUVHLE9BQTdHO0FBQ0QsS0FGRCxNQUVPO0FBQ0x0QixjQUFRcUIsS0FBUixnRkFBeUZGLEVBQUVHLE9BQTNGO0FBQ0Q7QUFDRjtBQUNELFNBQU9yQixLQUFQO0FBQ0QsQ0F4QkQiLCJmaWxlIjoiY2xpZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IE5leG1vIGZyb20gJ25leG1vJztcblxuY2xhc3MgQ2xpZW50IHtcbiAgY29uc3RydWN0b3IoY29uZmlnLCBlbWl0dGVyKSB7XG4gICAgdGhpcy5lbWl0dGVyID0gZW1pdHRlcjtcbiAgICB0aGlzLmNvbmZpZyA9IGNvbmZpZztcbiAgfVxuXG4gIGluc3RhbmNlKCkge1xuICAgIGxldCBuZXhtbyA9IGluaXRpYWxpemUodGhpcy5jb25maWcsIHRoaXMuZW1pdHRlcik7XG4gICAgcmV0dXJuIG5leG1vO1xuICB9XG5cbiAgZGVmaW5pdGlvbigpIHtcbiAgICByZXR1cm4gTmV4bW87XG4gIH1cblxuICBpbnN0YW5jZVdpdGgoa2V5LCBzZWNyZXQpIHtcbiAgICByZXR1cm4gbmV3IE5leG1vKHthcGlLZXk6IGtleSwgYXBpU2VjcmV0OiBzZWNyZXR9KTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBDbGllbnQ7XG5cbi8vIHByaXZhdGUgbWV0aG9kc1xuXG5sZXQgaW5pdGlhbGl6ZSA9IGZ1bmN0aW9uKGNvbmZpZywgZW1pdHRlcikge1xuICBsZXQgbmV4bW8gPSBudWxsO1xuICBsZXQgcGFja2FnZURldGFpbHMgPSByZXF1aXJlKGAke19fZGlybmFtZX0vLi4vcGFja2FnZS5qc29uYCk7XG5cbiAgdHJ5IHtcbiAgICBsZXQgY3JlZGVudGlhbHMgPSBjb25maWcucmVhZCgpLmNyZWRlbnRpYWxzO1xuICAgIG5leG1vID0gbmV3IE5leG1vKFxuICAgICAge1xuICAgICAgICBhcGlLZXk6IGNyZWRlbnRpYWxzLmFwaV9rZXksXG4gICAgICAgIGFwaVNlY3JldDogY3JlZGVudGlhbHMuYXBpX3NlY3JldFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgZGVidWc6IGVtaXR0ZXIuZGVidWdnaW5nLFxuICAgICAgICBhcHBlbmRUb1VzZXJBZ2VudDogYG5leG1vLWNsaS8ke3BhY2thZ2VEZXRhaWxzLnZlcnNpb24ucmVwbGFjZSgndicsICcnKX1gXG4gICAgICB9XG4gICAgKTtcbiAgfSBjYXRjaChlKSB7XG4gICAgaWYgKGUgaW5zdGFuY2VvZiBUeXBlRXJyb3IpIHtcbiAgICAgIGVtaXR0ZXIuZXJyb3IoYENvdWxkIG5vdCBpbml0aWFsaXplIE5leG1vIGxpYnJhcnkuIFBsZWFzZSBydW4gJ25leG1vIHNldHVwJyB0byBzZXR1cCB0aGUgQ0xJIGNvcnJlY3RseS4gKCR7ZS5tZXNzYWdlfSlgKTtcbiAgICB9IGVsc2Uge1xuICAgICAgZW1pdHRlci5lcnJvcihgQ291bGQgbm90IHJlYWQgY3JlZGVudGlhbHMuIFBsZWFzZSBydW4gJ25leG1vIHNldHVwJyB0byBzZXR1cCB0aGUgQ0xJLiAoJHtlLm1lc3NhZ2V9KWApO1xuICAgIH1cbiAgfVxuICByZXR1cm4gbmV4bW87XG59O1xuIl19